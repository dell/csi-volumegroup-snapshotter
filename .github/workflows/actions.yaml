name: Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  code-check:
    name: Check Go formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run the formatter, linter, and vetter
        uses: dell/common-github-actions/go-code-formatter-linter-vetter@main
        with:
          directories: ./...
  test:
    name: Run Go unit tests and check package coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Checkout csi-volumegroup-snapshotter
        uses: actions/checkout@v2
        with:
          # change these to your driver name
          repository: 'dell/csi-volumegroup-snapshotter'
          path: 'csi-volumegroup-snapshotter'
      - name: Run unit tests and check package coverage
        uses: dell/common-github-actions/go-code-tester@pflex-unit-test-temp-patch
        # set these three to appropriate values
        with:
          # dropping threshold to 80 since we're not at 90% yet
          threshold: 80
          # test-folder should be accurate for all csi-drivers
          test-folder: "./controllers"
  go_security_scan:
    name: Go security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run Go Security
        uses: securego/gosec@master
        with:
          args: -exclude-dir test ./...
  malware_security_scan:
    name: Malware Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run malware scan
        uses: dell/common-github-actions/malware-scanner@main
        with:
          directories: .
          options: -ri
